tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  targetNamespace: "radon.blueprints.examples"
topology_template:
  node_templates:
    OpenWorkload_0:
      type: radon.nodes.OpenWorkload
      metadata:
        x: "523"
        y: "838"
        displayName: "clients"
      properties:
        interarrival_time:
          mean: 0.067
        name: "clients"
        type: "open-workload"
      requirements:
        - storage:
            node: AwsS3Bucket_1
            relationship: con_ConnectsTo_3
            capability: storage_endpoint
        - storage:
            node: AwsS3Bucket_0
            relationship: con_ConnectsTo_4
            capability: storage_endpoint
    AwsLambdaFunction_0:
      type: radon.nodes.aws.AwsLambdaFunction
      metadata:
        x: "516"
        y: "289"
        displayName: "routes_calculator"
      properties:
        handler: "gr.act.viarota.service.S3RequestHandler"
        memory: 512
        runtime: "nodejs"
        timeout: 10
        concurrency: "0"
      requirements:
        - endpoint:
            node: AwsS3Bucket_1
            relationship: con_ConnectsTo_0
            capability: storage_endpoint
        - endpoint:
            node: AwsS3Bucket_0
            relationship: con_ConnectsTo_1
            capability: storage_endpoint
        - endpoint:
            node: ThirdPartyService_0
            relationship: con_ConnectsTo_2
            capability: endpoint
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_2
            capability: host
    AwsS3Bucket_0:
      type: radon.nodes.aws.AwsS3Bucket
      metadata:
        x: "48"
        y: "421"
        displayName: "routes_in"
      requirements:
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_0
            capability: host
        - invoker:
            node: AwsLambdaFunction_0
            relationship: con_AwsTriggers_0
            capability: invocable
    AwsS3Bucket_1:
      type: radon.nodes.aws.AwsS3Bucket
      metadata:
        x: "818"
        y: "403"
        displayName: "routes_out"
      requirements:
        - host:
            node: AwsPlatform_0
            relationship: con_HostedOn_1
            capability: host
    AwsPlatform_0:
      type: radon.nodes.aws.AwsPlatform
      metadata:
        x: "518"
        y: "548"
        displayName: "aws"
      properties:
        name: "viarota-aws"
        region: "us-east-2"
    ThirdPartyService_0:
      type: radon.nodes.ThirdPartyService
      metadata:
        x: "80"
        y: "216"
        displayName: "gmd"
      properties:
        entries:
          route:
            activities:
              a1:
                service_time:
                  mean: 0.001
                bound_to_entry: true
                reply_to_entry: true
        name: "viarota-gmd"
        type: "third-party-service"
  relationship_templates:
    con_ConnectsTo_2:
      type: radon.relationships.ConnectsTo
    con_HostedOn_2:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_3:
      type: radon.relationships.ConnectsTo
    con_ConnectsTo_4:
      type: radon.relationships.ConnectsTo
    con_HostedOn_0:
      type: tosca.relationships.HostedOn
    con_HostedOn_1:
      type: tosca.relationships.HostedOn
    con_ConnectsTo_0:
      type: radon.relationships.ConnectsTo
    con_ConnectsTo_1:
      type: radon.relationships.ConnectsTo
    con_AwsTriggers_0:
      type: radon.relationships.aws.AwsTriggers
      properties:
        events: "s3:ObjectCreated:*"
